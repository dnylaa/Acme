services:
  app:
    build:
      context: . 
      dockerfile: ./docker/php-fpm/Dockerfile # Dockerfile path tetap relatif dari context
    image: my-laravel-app-image:1.0 # Nama Image untuk hasil build
    container_name: laravel_app_
    restart: unless-stopped
    volumes:
      - .:/var/www/html # Pasang proyek Laravel Anda ke dalam container
      - ./docker/php-fpm/php.ini:/usr/local/etc/php/conf.d/custom-php.ini # Pasang php.ini kustom
    environment:
      # Variabel lingkungan Laravel - akan ditimpa oleh .env
      APP_ENV: local
      APP_DEBUG: true
      # Koneksi database untuk Laravel
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE:-laravel}
      DB_USERNAME: ${DB_USERNAME:-root}
      DB_PASSWORD: ${DB_PASSWORD:-root}
    networks:
      - app-network

  nginx:
    image: nginx:stable-alpine
    container_name: laravel_nginx
    restart: unless-stopped
    ports:
      - "8000:80" # Petakan port host 8000 ke port container 80
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app # Nginx bergantung pada PHP-FPM
    networks:
      - app-network

  mysql:
    image: mysql:8.0 # Anda bisa menggunakan versi lain seperti mariadb:latest atau postgres:latest
    container_name: laravel_mysql
    restart: unless-stopped
    ports:
      - "3306:3306" # Petakan port host 3306 ke port container 3306
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root}
      MYSQL_DATABASE: ${DB_DATABASE:-laravel}
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes" # Untuk pengembangan lokal
    volumes:
      - dbdata:/var/lib/mysql # Volume persisten untuk data MySQL
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf # Pasang my.cnf kustom
    networks:
      - app-network

  adminer:
    image: adminer:latest # Menggunakan image Adminer resmi
    container_name: laravel_adminer
    restart: unless-stopped
    ports:
      - "8081:8080" # Akses Adminer dari http://localhost:8081
    environment:
      ADMINER_DEFAULT_SERVER: mysql # Host database, merujuk ke nama service MySQL
      ADMINER_DEFAULT_USER: ${DB_USERNAME:-root} # Opsional, untuk login otomatis
      ADMINER_DEFAULT_PASSWORD: ${DB_PASSWORD:-root} # Opsional, untuk login otomatis
    depends_on:
      - mysql # Adminer bergantung pada service MySQL
    networks:
      - app-network

  # Node.js/NPM untuk frontend (opsional)
  npm:
    image: node:20-alpine
    container_name: laravel_npm
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    ports: # <-- Tambahkan Port Untuk Vite
      - "5173:5173" # Memaparkan port Vite dev server
    tty: true # Biarkan container berjalan untuk perintah interaktif
    networks:
      - app-network

volumes:
  dbdata: # Definisikan volume bernama untuk data MySQL

networks:
  app-network:
    driver: bridge